# Generated by Django 2.2.7 on 2020-05-26 11:16

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('additional_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('IN', 'Initial'), ('LB', 'Logging Beginning'), ('LE', 'Logging Ending'), ('CB', 'Carbonization Beginning'), ('CE', 'Carbonization Ending'), ('TR', 'Loading & Transport'), ('CF', 'Checkpoint Eaux Et Forest'), ('CS', 'Checkpoint Sodefor'), ('RE', 'Reception')], default='IN', max_length=30, verbose_name='Action')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Oven',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oven_id', models.CharField(max_length=1, verbose_name='Oven ID')),
            ],
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=100, null=True, verbose_name='Pid')),
                ('type', models.CharField(choices=[('PLT', 'Plot'), ('HAR', 'Harvest'), ('TRK', 'Truck')], default='PLT', max_length=30, verbose_name='Type')),
                ('last_action', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='package_last_action', to='entities.Entity', verbose_name='Last action')),
                ('plot', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plot_harvest', to='entities.Package', verbose_name='Plot ID')),
                ('harvest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trucks', to='entities.Package', verbose_name='Harvest ID')),
            ],
        ),
        migrations.CreateModel(
            name='LoggingEnding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ending_date', models.PositiveIntegerField(verbose_name='Ending date')),
                ('number_of_trees', models.PositiveSmallIntegerField(verbose_name='Number of trees')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoggingBeginning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning_date', models.PositiveIntegerField(verbose_name='Beginning date')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
                ('parcel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parcel_loggings', to='additional_data.Parcel', verbose_name='Parcel')),
                ('tree_specie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loggings', to='additional_data.TreeSpecie', verbose_name='Tree Specie')),
                ('village', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loggings', to='additional_data.Village', verbose_name='Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entity',
            name='package',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='package_entities', to='entities.Package', verbose_name='Package'),
        ),
        migrations.AddField(
            model_name='entity',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entities', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='entity',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='entity',
            name='timestamp',
            field=models.PositiveIntegerField(verbose_name='Timestamp'),
        ),
        migrations.CreateModel(
            name='LoadingTransport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=16, verbose_name='Truck ID')),
                ('loading_date', models.PositiveIntegerField(verbose_name='Loading date')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='additional_data.Destination', verbose_name='Destination')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.CharField(blank=True, max_length=14, null=True, verbose_name='QR Code')),
                ('pid', models.CharField(max_length=50, null=True, verbose_name='Pid')),
                ('transport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bags', to='entities.LoadingTransport', verbose_name='Transport ID')),
                ('reception', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bags', to='entities.Reception', verbose_name='Reception')),
            ],
        ),
        migrations.CreateModel(
            name='CarbonizationEnding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.PositiveIntegerField(verbose_name='End date')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
                ('ovens', models.ManyToManyField(related_name='carbonization_endings', to='entities.Oven', verbose_name='Ovens')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarbonizationBeginning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning_date', models.PositiveIntegerField(verbose_name='Beginning date')),
                ('oven_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Oven height')),
                ('oven_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Oven width')),
                ('oven_length', models.PositiveIntegerField(blank=True, null=True, verbose_name='Oven length')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Entity', verbose_name='Entity')),
                ('oven', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='carbonization_beginning', to='entities.Oven', verbose_name='Oven')),
                ('oven_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carbonization_beginnings', to='additional_data.OvenType', verbose_name='Oven type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='entity',
            name='action',
            field=models.CharField(choices=[('IN', 'Initial'), ('LB', 'Logging Beginning'), ('LE', 'Logging Ending'), ('CB', 'Carbonization Beginning'), ('CE', 'Carbonization Ending'), ('TR', 'Loading & Transport'), ('RE', 'Reception')], default='IN', max_length=30, verbose_name='Action'),
        ),
        migrations.CreateModel(
            name='ReceptionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('document', 'Document'), ('receipt', 'Receipt')], max_length=8, verbose_name='Type')),
                ('image', models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Image')),
                ('reception', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='entities.Reception', verbose_name='Reception')),
            ],
        ),
    ]
